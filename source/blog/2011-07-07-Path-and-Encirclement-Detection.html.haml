---
title: Path and Encirclement Detection
tags: birom, algorithms
---

- content_for :assets do
  = javascript_include_tag "blog/2011-06-30-Path-and-Encirclement-Detection/raphael.js"
  = javascript_include_tag "blog/2011-06-30-Path-and-Encirclement-Detection/standalone.js"
  :javascript
    $(function() {
      var start = require('./standalone');
      start();
    });

%p
  In an earlier post I was trying to describe a way to use
  %a{:href => "/blog/2011/06/20/grids-and-coordinate-systems"} coordinates on triangular grids.
  In the end I decided to go with a simple three lane coordinate system that
  allows easy calculations based on graph theory.
%h2 Encirclement
%p
  The basic Birom rules are based on encirclement detection. The three following cases are all implemented as
  %a{:href => "http://en.wikipedia.org/wiki/Breadth-first_search"} Breadth-first search
  with different parameters for neighbour detection and exit conditions.
%p= image_tag "blog/2011-06-30-Path-and-Encirclement-Detection/encirclement.png"
%h3 1: Scoring
%p When a player encloses an vacant area, the captured area is being marked with point stones for the corresponding player.
%h3 2: Capturing opponent's stones
%p
  When a player fully encircles one or more opponent's stones, the stones get captured by the opponent. They can than be re-used later
  as additional stones. (There has been extensive discussions about this topic partially covered in
  = succeed "." do
    %a{:href => "/blog/2011-06-29-Birom-Dilemma-I"} Birom Dilemma I.
  In this implementation, stones are captured, even though they are
  only encircled by common ground)
%h3 3: Encircling the central red Birom
%p
  This rule checks, weather a player has managed to fully encircle the central red Birom. The first player achieving that, wins the
  game. If both players encircle the red Birom during the same turn, the game ends in a draw.
%h2 Try it out!
%p
  This example is based on triangles only. The same rules as in
  %a{:href => "http://birom.net/424843/Rules"} birom
  are applied.
  Click to add a triangle. The triangle must be connected to the existing stones with at least one corner.
%p
  #header
    .coordinates{:style => "float: left; width: 150px;"}
      xy:
      %span#xy
    .coordinates{:style => "float: left; width: 150px;"}
      uvw:
      %span#uvw
    #points{:style => "float: left; width: 100px;"}
      %span#0
      %span#1
    %span#error{:style => "float: left; width: 200px; color: red;"}
  %div{:style => "clear: left;"}
  #paper{:style => "height: 800px; background-color: black;"}
%h2 What's next
%p For the reason that a Birom is nothing more than a collection of triangles, the same algorithms can be used for the real Birom game implementation. Focus is more and more shifting towards client implementation, game persistency and other back-end related stuff. There may be a post about our CoffeeScript, node.js and mongoDB setup soon.

